# Generated by Django 4.0.7 on 2022-09-26 13:44

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0005_alter_products_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brandmaster',
            fields=[
                ('trial_brandid_1', models.AutoField(primary_key=True, serialize=False)),
                ('brandname', models.TextField(unique=True)),
                ('areaallotted', models.TextField()),
                ('trial_isfixed_5', models.BigIntegerField()),
                ('trial_isactive_6', models.BigIntegerField()),
                ('spcommpercent', models.TextField()),
                ('spcommamt', models.TextField()),
                ('mlnumber', models.BigIntegerField()),
            ],
            options={
                'db_table': 'brandmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Datatypemaster',
            fields=[
                ('datatypeid', models.AutoField(primary_key=True, serialize=False)),
                ('trial_datatypename_2', models.TextField(unique=True)),
                ('datatypeformat', models.TextField()),
                ('display', models.TextField()),
                ('trial_prefixsuffix_5', models.TextField()),
            ],
            options={
                'db_table': 'datatypemaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Departmentmaster',
            fields=[
                ('departmentid', models.AutoField(primary_key=True, serialize=False)),
                ('departmentname', models.TextField(unique=True)),
                ('areaallotted', models.TextField()),
                ('isactive', models.BigIntegerField()),
                ('trial_isfixed_5', models.BigIntegerField()),
                ('trial_mlnumber_6', models.BigIntegerField()),
            ],
            options={
                'db_table': 'departmentmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Formatmaster',
            fields=[
                ('formatid', models.AutoField(primary_key=True, serialize=False)),
                ('formattype', models.TextField()),
                ('vbprefix', models.TextField()),
                ('vbsuffix', models.TextField()),
                ('trial_sqlprefix_5', models.TextField()),
                ('sqlsuffix', models.TextField()),
            ],
            options={
                'db_table': 'formatmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hsnsacmaster',
            fields=[
                ('hsnsacid', models.AutoField(primary_key=True, serialize=False)),
                ('hsnsaccode', models.TextField(unique=True)),
                ('hsnsacname', models.TextField()),
                ('isactive', models.BigIntegerField()),
                ('isfixed', models.BigIntegerField()),
                ('mlnumber', models.BigIntegerField()),
                ('uqc', models.TextField()),
            ],
            options={
                'db_table': 'hsnsacmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Listmaster',
            fields=[
                ('listid', models.AutoField(primary_key=True, serialize=False)),
                ('trial_listname_2', models.TextField(unique=True)),
                ('isfixed', models.BigIntegerField()),
                ('trial_isactive_4', models.BigIntegerField()),
                ('trial_mlnumber_5', models.BigIntegerField()),
            ],
            options={
                'db_table': 'listmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Matrixmaster',
            fields=[
                ('matrixid', models.AutoField(primary_key=True, serialize=False)),
                ('trial_matrixname_2', models.TextField(unique=True)),
                ('field1name', models.TextField()),
                ('field2name', models.TextField()),
                ('field3name', models.TextField()),
                ('trial_field4name_9', models.TextField()),
                ('field5name', models.TextField()),
                ('field6name', models.TextField()),
                ('isactive', models.BigIntegerField()),
                ('isfixed', models.BigIntegerField()),
                ('linkfieldname', models.TextField()),
                ('activateexpiry', models.BigIntegerField()),
                ('mlnumber', models.BigIntegerField()),
            ],
            options={
                'db_table': 'matrixmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Principalcompanymaster',
            fields=[
                ('principalcompanyid', models.AutoField(primary_key=True, serialize=False)),
                ('principalcompanyname', models.TextField(unique=True)),
                ('trial_isactive_3', models.BigIntegerField()),
                ('trial_isfixed_4', models.BigIntegerField()),
                ('trial_mlnumber_5', models.BigIntegerField()),
            ],
            options={
                'db_table': 'principalcompanymaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productgroupmaster',
            fields=[
                ('trial_productgroupid_1', models.AutoField(primary_key=True, serialize=False)),
                ('productgroupname', models.TextField(unique=True)),
                ('areaallotted', models.TextField()),
                ('trial_isactive_5', models.BigIntegerField()),
                ('isfixed', models.BigIntegerField()),
                ('mlnumber', models.BigIntegerField()),
            ],
            options={
                'db_table': 'productgroupmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productmaster',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('productname', models.TextField(blank=True, null=True, unique=True)),
                ('printname', models.TextField(blank=True, null=True)),
                ('upcean', models.TextField(unique=True)),
                ('trial_userdefinedcode_5', models.TextField()),
                ('trial_maxretailprice_6', models.TextField()),
                ('trial_binlocation_12', models.TextField()),
                ('evalcount', models.BigIntegerField()),
                ('trial_printbarcode_17', models.BigIntegerField()),
                ('askrate', models.BigIntegerField()),
                ('trial_usefifo_19', models.BigIntegerField()),
                ('productmessage', models.TextField()),
                ('quantityonhand', models.TextField()),
                ('trial_reorderinformation_22', models.BigIntegerField()),
                ('reorderlevel', models.TextField()),
                ('trial_safetylevel_24', models.TextField()),
                ('reorderquantity', models.TextField()),
                ('minimumorderquantity', models.TextField()),
                ('standardsaleprice', models.TextField()),
                ('trial_standardcostprice_28', models.TextField()),
                ('productdiscount', models.TextField()),
                ('trial_allowoperatordiscount_30', models.BigIntegerField()),
                ('productremarks', models.TextField()),
                ('picture1', models.TextField()),
                ('picture2', models.TextField()),
                ('trial_recipecomponents_34', models.BigIntegerField()),
                ('trial_recorddatetime_35', models.DateTimeField()),
                ('companyid', models.BigIntegerField()),
                ('trial_sessionid_37', models.TextField()),
                ('trial_isactive_38', models.BigIntegerField()),
                ('isfixed', models.BigIntegerField()),
                ('conversionfactor', models.TextField()),
                ('alternateunitid', models.BigIntegerField()),
                ('trial_changeconversion_42', models.BigIntegerField()),
                ('weighingscaleexport', models.BigIntegerField()),
                ('trial_weighingscaleconversion_45', models.BigIntegerField()),
                ('trial_printnameother_46', models.TextField()),
                ('trial_generateproductchild_47', models.BigIntegerField()),
                ('trial_couponfile_48', models.TextField()),
                ('spcommpercent', models.TextField()),
                ('spcommamt', models.TextField()),
                ('schemeids', models.TextField()),
                ('trial_pmfield1_52', models.TextField()),
                ('pmfield2', models.TextField()),
                ('trial_pmfield3_54', models.TextField()),
                ('pmfield4', models.TextField()),
                ('trial_pmfield5_56', models.TextField()),
                ('pmfield6', models.TextField()),
                ('trial_pmfield7_58', models.TextField()),
                ('pmfield8', models.TextField()),
                ('pmfield9', models.TextField()),
                ('pmfield10', models.TextField()),
                ('calcnetweight', models.BigIntegerField()),
                ('barcoderatio', models.TextField()),
                ('link', models.TextField()),
                ('askquantity', models.BigIntegerField()),
                ('askcontainer', models.BigIntegerField()),
                ('serviceitem', models.TextField()),
                ('rate', models.TextField()),
                ('periodicity', models.BigIntegerField()),
                ('upcean1', models.TextField(unique=True)),
                ('upcean2', models.TextField(unique=True)),
                ('trial_upcean3_72', models.TextField(unique=True)),
                ('upcean4', models.TextField(unique=True)),
                ('trial_teamid_74', models.TextField()),
                ('trial_changecontainerweight_75', models.BigIntegerField()),
                ('trial_saleaccountid_76', models.BigIntegerField()),
                ('salereturnaccountid', models.BigIntegerField()),
                ('trial_purchaseaccountid_78', models.BigIntegerField()),
                ('purchasereturnaccountid', models.BigIntegerField()),
                ('taxablevalue', models.TextField()),
                ('loguser', models.BigIntegerField()),
                ('loglocation', models.BigIntegerField()),
                ('logsession', models.TextField()),
                ('webgroupid', models.BigIntegerField()),
                ('websubgroupid', models.BigIntegerField()),
                ('webitemname', models.TextField()),
                ('trial_isrecommended_87', models.BigIntegerField()),
                ('foodtype', models.BigIntegerField()),
                ('spicelevel', models.BigIntegerField()),
                ('webproductname', models.TextField()),
                ('convertproductid', models.TextField()),
                ('convertqty', models.TextField()),
                ('mlnumber', models.BigIntegerField()),
                ('productcodesap', models.TextField()),
                ('generateproduction', models.BigIntegerField()),
                ('trial_spcommdatewise_97', models.TextField()),
            ],
            options={
                'db_table': 'productmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subgroupmaster',
            fields=[
                ('subgroupid', models.AutoField(primary_key=True, serialize=False)),
                ('subgroupname', models.TextField(unique=True)),
                ('areaallotted', models.TextField()),
                ('isactive', models.BigIntegerField()),
                ('trial_isfixed_9', models.BigIntegerField()),
                ('trial_spcommpercent_10', models.TextField()),
                ('spcommamt', models.TextField()),
                ('mlnumber', models.BigIntegerField()),
                ('trial_taxslabsale_13', models.TextField()),
            ],
            options={
                'db_table': 'subgroupmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taxmaster',
            fields=[
                ('taxid', models.AutoField(primary_key=True, serialize=False)),
                ('taxname', models.TextField(unique=True)),
                ('includeinrate', models.BigIntegerField()),
                ('taxvalue', models.TextField()),
                ('isactive', models.BigIntegerField()),
                ('isfixed', models.BigIntegerField()),
                ('trial_calcmethod_7', models.BigIntegerField()),
                ('loguser', models.BigIntegerField()),
                ('trial_loglocation_9', models.BigIntegerField()),
                ('logsession', models.TextField()),
                ('trial_mlnumber_11', models.BigIntegerField()),
                ('trial_interstatetaxid_12', models.BigIntegerField()),
                ('saleaccountid', models.BigIntegerField()),
                ('salereturnaccountid', models.BigIntegerField()),
                ('purchaseaccountid', models.BigIntegerField()),
                ('purchasereturnaccountid', models.BigIntegerField()),
            ],
            options={
                'db_table': 'taxmaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Unitmaster',
            fields=[
                ('unitid', models.AutoField(primary_key=True, serialize=False)),
                ('unitname', models.TextField(unique=True)),
                ('formalname', models.TextField()),
                ('digitafterdecimal', models.BigIntegerField()),
                ('conversionunit', models.BigIntegerField()),
                ('conversionqty', models.TextField()),
                ('isactive', models.BigIntegerField()),
                ('isfixed', models.BigIntegerField()),
                ('mlnumber', models.BigIntegerField()),
            ],
            options={
                'db_table': 'unitmaster',
                'managed': False,
            },
        ),
        migrations.RemoveField(
            model_name='cart',
            name='product_id',
        ),
        migrations.RemoveField(
            model_name='orders',
            name='user_id',
        ),
        migrations.RemoveField(
            model_name='products',
            name='brand',
        ),
        migrations.RemoveField(
            model_name='products',
            name='category',
        ),
        migrations.RemoveField(
            model_name='products',
            name='image',
        ),
        migrations.DeleteModel(
            name='Brand',
        ),
        migrations.DeleteModel(
            name='Cart',
        ),
        migrations.DeleteModel(
            name='Category',
        ),
        migrations.DeleteModel(
            name='Image',
        ),
        migrations.DeleteModel(
            name='Orders',
        ),
        migrations.DeleteModel(
            name='Products',
        ),
    ]
